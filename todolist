TODO Create usage report functionality/Implement domain logic for creating weekly usage report > UsageReport
TODO Implement clear screen function for console menu

TODO Document basic architecture for console menus

Domain package contains services which perform the business logic/rules

TODO Create perform inventory count menu
TODO Determine if DTOs should be continued or eliminated



Note: Inventory - is an aggregate root
         Unique inventory id maps to a product id which maps to a count

Note: Inventory should be able to know its total worth
Note: Inventory is an aggregate root, it is composed of InventoryItems, InventoryItems have counts


Creating a new inventory adds all active products as inventory items.

Product should only have price, unit of measurement, case pack, and name.

New product event causes an item to be created for inventory.

Inventory is created and all active inventory items are added.

Inventory items are uniquely identified by an Id which is the combination of name and location.

Users can add an item to inventory. Items may exist in multiple locations,
 but only one category. Inventory tracks the total dollars of all counted items.

 Should the inventory bounded context be concerned with pricing and units? Or does the inventory context
 just perform the counts (item name, item location, qty on hand). An inventory aggregate can
 manage which location items are in for counting.

Inventory Report
A report is an value object with read-only views of the inventory. It contains all the logic/process
for creating a report between two inventory dates.

Creating a new inventory
  - Request a list of products (ids)
  - Query the item repository by external id
      - Create new item if not found
  - Load all locations
  - Add all items to inventory

Inventory Items
  - are unique with respect to name and location
  - uniquely identified by an internal item id
  -



Managing Item Locations for Inventory
 - Should inventory be a mapping between items to locations? -> It is but its not in the sense of a RDBS.
 - Should Item know it's location? Yes, but how to handle....
    - Item is identified by an ID but...
        - the storage location and name must be unique
 - Should Location know which items it has?
    - No because this gets back to being a mapping table.

1. Remove the location from Product.
2. Remove price and category from item
3. Have item track external id, productId and internal id of name and location
4. Inventory bounded context should have a series of locations
5.
